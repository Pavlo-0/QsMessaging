jobs:
  - job: Build
    displayName: 'Build Project'
    pool:
      name: 'Default'
    steps:
      - script: dotnet restore $(projectName).sln
        displayName: 'Restore NuGet Packages'
        
      - script: dotnet build $(projectName).sln --configuration $(buildConfiguration) --no-restore
        displayName: 'Build Project'

  - job: Pack
    displayName: 'Pack NuGet Package'
    dependsOn: Build  # This job will run only after the Build job completes
    pool:
      name: 'Default'
    steps:
      - script: dotnet pack $(projectName).csproj --configuration $(buildConfiguration) --no-build -o $(Build.ArtifactStagingDirectory)
        displayName: 'Create NuGet Package'

  - job: Publish
    displayName: 'Publish NuGet Package'
    dependsOn: Pack  # This job will run only after the Pack job completes
    pool:
      name: 'Default'
    steps:
      - task: NuGetAuthenticate@1
        inputs:
          nuGetServiceConnections: 'NuGetOrgConnection'

      - task: NuGetCommand@2
        inputs:
          command: 'push'
          packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
          publishVstsFeed: false
          nuGetFeedType: 'external'
          publishPackageUrl: $(nugetSource)
          apiKey: $(nugetApiKey)
        displayName: 'Publish NuGet Package'
